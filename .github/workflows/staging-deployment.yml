name: Sync Staging from Production

on:
  push:
    branches:
      - staging

jobs:
  sync-staging-db:
    runs-on: ubuntu-latest

    env:
      PROD_DB_URL: ${{ secrets.PROD_DB_URL }}
      STAGING_DB_URL: ${{ secrets.STAGING_DB_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Supabase CLI and Postgres tools
        run: |
          SUPABASE_VERSION=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | grep tag_name | cut -d '"' -f 4)
          curl -L -o supabase "https://github.com/supabase/cli/releases/download/$SUPABASE_VERSION/supabase_linux_amd64"
          chmod +x supabase
          sudo mv supabase /usr/local/bin
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Dump production schema
        run: |
          pg_dump --schema-only --no-owner --dbname="$PROD_DB_URL" > schema.sql

      - name: Dump production data
        run: |
          pg_dump --data-only --no-owner --dbname="$PROD_DB_URL" > data.sql

      - name: Drop and recreate public schema on staging
        run: |
          psql "$STAGING_DB_URL" -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

      - name: Apply schema to staging
        run: |
          psql "$STAGING_DB_URL" < schema.sql

      - name: Import data to staging
        run: |
          psql "$STAGING_DB_URL" < data.sql
