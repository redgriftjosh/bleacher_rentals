create table Addresses (
  address_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  street text not null,
  city text not null,
  state_province text not null,
  zip_postal text null,
  constraint Addresses_pkey primary key (address_id)
);

create table HomeBases (
  home_base_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  home_base_name text not null,
  constraint HomeBases_pkey primary key (home_base_id)
);

create table Bleachers (
  bleacher_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
  bleacher_number smallint not null,
  home_base_id bigint not null,
  winter_home_base_id bigint not null,
  bleacher_rows smallint not null,
  bleacher_seats smallint not null,
  created_by uuid null,
  updated_at timestamp without time zone null,
  updated_by uuid null,
  constraint Bleachers_pkey primary key (bleacher_id),
  constraint Bleachers_bleacher_number_key unique (bleacher_number),
  constraint Bleachers_home_base_id_fkey foreign KEY (home_base_id) references HomeBases (home_base_id) on update CASCADE,
  constraint Bleachers_winter_home_base_id_fkey foreign KEY (winter_home_base_id) references HomeBases (home_base_id) on update CASCADE
);

create table Events (
  event_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  event_name text not null,
  setup_start date null,
  event_start date not null,
  event_end date not null,
  teardown_end date null,
  address_id bigint not null,
  total_seats integer null,
  seven_row smallint null,
  ten_row smallint null,
  fifteen_row smallint null,
  lenient boolean not null,
  booked boolean not null default false,
  notes text null,
  must_be_clean boolean not null default false,
  hsl_hue smallint null,
  constraint Events_pkey primary key (event_id),
  constraint Events_address_id_fkey foreign KEY (address_id) references Addresses (address_id) on update CASCADE on delete RESTRICT
);

create table BleacherEvents (
  bleacher_event_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  bleacher_id bigint not null,
  event_id bigint not null,
  constraint BleacherEvents_pkey primary key (bleacher_event_id),
  constraint BleacherEvents_bleacher_id_fkey foreign KEY (bleacher_id) references Bleachers (bleacher_id) on update CASCADE on delete RESTRICT,
  constraint BleacherEvents_event_id_fkey foreign KEY (event_id) references Events (event_id) on update CASCADE on delete CASCADE
);

create table Users (
  user_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  first_name text null,
  last_name text null,
  email text not null,
  phone text null,
  clerk_user_id text null,
  status bigint not null default '1'::bigint,
  role bigint null default '1'::bigint,
  constraint Users_pkey primary key (user_id),
  constraint Users_clerk_user_id_key unique (clerk_user_id),
  constraint Users_email_key unique (email)
);

create table UserHomeBases (
  user_home_base_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  user_id bigint null,
  home_base_id bigint null,
  constraint UserHomeBases_pkey primary key (user_home_base_id),
  constraint UserHomeBases_home_base_id_fkey foreign KEY (home_base_id) references HomeBases (home_base_id) on update CASCADE on delete CASCADE,
  constraint UserHomeBases_user_id_fkey foreign KEY (user_id) references Users (user_id) on update CASCADE on delete CASCADE
);

create table UserRoles (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  role text not null,
  constraint UserRoles_pkey primary key (id)
);

create table UserStatuses (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  status text not null,
  constraint UserStatuses_pkey primary key (id)
);