alter table "public"."BleacherEvents" drop constraint "bleacherevents_bleacher_id_fkey";

alter table "public"."BleacherEvents" drop constraint "bleacherevents_event_id_fkey";

alter table "public"."Bleachers" drop constraint "bleachers_bleacher_number_key";

alter table "public"."Bleachers" drop constraint "bleachers_home_base_id_fkey";

alter table "public"."Bleachers" drop constraint "bleachers_winter_home_base_id_fkey";

alter table "public"."Events" drop constraint "events_address_id_fkey";

alter table "public"."UserHomeBases" drop constraint "userhomebases_home_base_id_fkey";

alter table "public"."UserHomeBases" drop constraint "userhomebases_user_id_fkey";

alter table "public"."Users" drop constraint "users_clerk_user_id_key";

alter table "public"."Users" drop constraint "users_email_key";

alter table "public"."Addresses" drop constraint "addresses_pkey";

alter table "public"."BleacherEvents" drop constraint "bleacherevents_pkey";

alter table "public"."Bleachers" drop constraint "bleachers_pkey";

alter table "public"."Events" drop constraint "events_pkey";

alter table "public"."HomeBases" drop constraint "homebases_pkey";

alter table "public"."UserHomeBases" drop constraint "userhomebases_pkey";

alter table "public"."UserRoles" drop constraint "userroles_pkey";

alter table "public"."UserStatuses" drop constraint "userstatuses_pkey";

alter table "public"."Users" drop constraint "users_pkey";

drop index if exists "public"."addresses_pkey";

drop index if exists "public"."bleacherevents_pkey";

drop index if exists "public"."bleachers_bleacher_number_key";

drop index if exists "public"."bleachers_pkey";

drop index if exists "public"."events_pkey";

drop index if exists "public"."homebases_pkey";

drop index if exists "public"."userhomebases_pkey";

drop index if exists "public"."userroles_pkey";

drop index if exists "public"."users_clerk_user_id_key";

drop index if exists "public"."users_email_key";

drop index if exists "public"."users_pkey";

drop index if exists "public"."userstatuses_pkey";

create table "public"."Activities" (
    "activity_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "activity_type_id" bigint not null,
    "user_id" bigint,
    "from_address_id" bigint,
    "to_address_id" bigint,
    "date" text,
    "bleacher_id" bigint,
    "event_id" bigint
);


alter table "public"."Activities" enable row level security;

create table "public"."ActivityTypes" (
    "activity_type_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "activity_type" text not null
);


alter table "public"."ActivityTypes" enable row level security;

create table "public"."EventBleacherRequirements" (
    "event_bleacher_requirement_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "rows" smallint,
    "setup_from" text,
    "setup_to" text,
    "teardown_from" text,
    "teardown_to" text,
    "must_be_clean" boolean,
    "qty" smallint,
    "event_id" bigint
);


alter table "public"."EventBleacherRequirements" enable row level security;

alter table "public"."Addresses" enable row level security;

alter table "public"."BleacherEvents" add column "must_be_clean" boolean not null default false;

alter table "public"."BleacherEvents" add column "occupied_end" date;

alter table "public"."BleacherEvents" add column "occupied_start" date;

alter table "public"."BleacherEvents" add column "setup_start" date;

alter table "public"."BleacherEvents" add column "teardown_end" date;

alter table "public"."BleacherEvents" enable row level security;

alter table "public"."Bleachers" enable row level security;

alter table "public"."Events" alter column "event_end" drop not null;

alter table "public"."Events" alter column "event_start" drop not null;

alter table "public"."Events" enable row level security;

alter table "public"."UserHomeBases" enable row level security;

alter table "public"."UserRoles" enable row level security;

alter table "public"."UserStatuses" enable row level security;

alter table "public"."Users" add column "avatar_image_url" text;

alter table "public"."Users" enable row level security;

CREATE UNIQUE INDEX "Activities_pkey" ON public."Activities" USING btree (activity_id);

CREATE UNIQUE INDEX "ActivityTypes_pkey" ON public."ActivityTypes" USING btree (activity_type_id);

CREATE UNIQUE INDEX "Addresses_pkey" ON public."Addresses" USING btree (address_id);

CREATE UNIQUE INDEX "BleacherEvents_pkey" ON public."BleacherEvents" USING btree (bleacher_event_id);

CREATE UNIQUE INDEX "Bleachers_bleacher_number_key" ON public."Bleachers" USING btree (bleacher_number);

CREATE UNIQUE INDEX "Bleachers_pkey" ON public."Bleachers" USING btree (bleacher_id);

CREATE UNIQUE INDEX "EventBleacherRequirements_pkey" ON public."EventBleacherRequirements" USING btree (event_bleacher_requirement_id);

CREATE UNIQUE INDEX "Events_pkey" ON public."Events" USING btree (event_id);

CREATE UNIQUE INDEX "HomeBases_pkey" ON public."HomeBases" USING btree (home_base_id);

CREATE UNIQUE INDEX "UserHomeBases_pkey" ON public."UserHomeBases" USING btree (user_home_base_id);

CREATE UNIQUE INDEX "UserRoles_pkey" ON public."UserRoles" USING btree (id);

CREATE UNIQUE INDEX "UserStatuses_pkey" ON public."UserStatuses" USING btree (id);

CREATE UNIQUE INDEX "Users_clerk_user_id_key" ON public."Users" USING btree (clerk_user_id);

CREATE UNIQUE INDEX "Users_email_key" ON public."Users" USING btree (email);

CREATE UNIQUE INDEX "Users_pkey" ON public."Users" USING btree (user_id);

alter table "public"."Activities" add constraint "Activities_pkey" PRIMARY KEY using index "Activities_pkey";

alter table "public"."ActivityTypes" add constraint "ActivityTypes_pkey" PRIMARY KEY using index "ActivityTypes_pkey";

alter table "public"."Addresses" add constraint "Addresses_pkey" PRIMARY KEY using index "Addresses_pkey";

alter table "public"."BleacherEvents" add constraint "BleacherEvents_pkey" PRIMARY KEY using index "BleacherEvents_pkey";

alter table "public"."Bleachers" add constraint "Bleachers_pkey" PRIMARY KEY using index "Bleachers_pkey";

alter table "public"."EventBleacherRequirements" add constraint "EventBleacherRequirements_pkey" PRIMARY KEY using index "EventBleacherRequirements_pkey";

alter table "public"."Events" add constraint "Events_pkey" PRIMARY KEY using index "Events_pkey";

alter table "public"."HomeBases" add constraint "HomeBases_pkey" PRIMARY KEY using index "HomeBases_pkey";

alter table "public"."UserHomeBases" add constraint "UserHomeBases_pkey" PRIMARY KEY using index "UserHomeBases_pkey";

alter table "public"."UserRoles" add constraint "UserRoles_pkey" PRIMARY KEY using index "UserRoles_pkey";

alter table "public"."UserStatuses" add constraint "UserStatuses_pkey" PRIMARY KEY using index "UserStatuses_pkey";

alter table "public"."Users" add constraint "Users_pkey" PRIMARY KEY using index "Users_pkey";

alter table "public"."Activities" add constraint "Activities_activity_type_id_fkey" FOREIGN KEY (activity_type_id) REFERENCES "ActivityTypes"(activity_type_id) not valid;

alter table "public"."Activities" validate constraint "Activities_activity_type_id_fkey";

alter table "public"."Activities" add constraint "Activities_bleacher_id_fkey" FOREIGN KEY (bleacher_id) REFERENCES "Bleachers"(bleacher_id) not valid;

alter table "public"."Activities" validate constraint "Activities_bleacher_id_fkey";

alter table "public"."Activities" add constraint "Activities_event_id_fkey" FOREIGN KEY (event_id) REFERENCES "Events"(event_id) not valid;

alter table "public"."Activities" validate constraint "Activities_event_id_fkey";

alter table "public"."Activities" add constraint "Activities_from_address_id_fkey" FOREIGN KEY (from_address_id) REFERENCES "Addresses"(address_id) not valid;

alter table "public"."Activities" validate constraint "Activities_from_address_id_fkey";

alter table "public"."Activities" add constraint "Activities_to_address_id_fkey" FOREIGN KEY (to_address_id) REFERENCES "Addresses"(address_id) not valid;

alter table "public"."Activities" validate constraint "Activities_to_address_id_fkey";

alter table "public"."Activities" add constraint "Activities_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "Users"(user_id) not valid;

alter table "public"."Activities" validate constraint "Activities_user_id_fkey";

alter table "public"."BleacherEvents" add constraint "BleacherEvents_bleacher_id_fkey" FOREIGN KEY (bleacher_id) REFERENCES "Bleachers"(bleacher_id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."BleacherEvents" validate constraint "BleacherEvents_bleacher_id_fkey";

alter table "public"."BleacherEvents" add constraint "BleacherEvents_event_id_fkey" FOREIGN KEY (event_id) REFERENCES "Events"(event_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."BleacherEvents" validate constraint "BleacherEvents_event_id_fkey";

alter table "public"."Bleachers" add constraint "Bleachers_bleacher_number_key" UNIQUE using index "Bleachers_bleacher_number_key";

alter table "public"."Bleachers" add constraint "Bleachers_home_base_id_fkey" FOREIGN KEY (home_base_id) REFERENCES "HomeBases"(home_base_id) ON UPDATE CASCADE not valid;

alter table "public"."Bleachers" validate constraint "Bleachers_home_base_id_fkey";

alter table "public"."Bleachers" add constraint "Bleachers_winter_home_base_id_fkey" FOREIGN KEY (winter_home_base_id) REFERENCES "HomeBases"(home_base_id) ON UPDATE CASCADE not valid;

alter table "public"."Bleachers" validate constraint "Bleachers_winter_home_base_id_fkey";

alter table "public"."EventBleacherRequirements" add constraint "EventBleacherRequirements_event_id_fkey" FOREIGN KEY (event_id) REFERENCES "Events"(event_id) not valid;

alter table "public"."EventBleacherRequirements" validate constraint "EventBleacherRequirements_event_id_fkey";

alter table "public"."Events" add constraint "Events_address_id_fkey" FOREIGN KEY (address_id) REFERENCES "Addresses"(address_id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."Events" validate constraint "Events_address_id_fkey";

alter table "public"."UserHomeBases" add constraint "UserHomeBases_home_base_id_fkey" FOREIGN KEY (home_base_id) REFERENCES "HomeBases"(home_base_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."UserHomeBases" validate constraint "UserHomeBases_home_base_id_fkey";

alter table "public"."UserHomeBases" add constraint "UserHomeBases_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "Users"(user_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."UserHomeBases" validate constraint "UserHomeBases_user_id_fkey";

alter table "public"."Users" add constraint "Users_clerk_user_id_key" UNIQUE using index "Users_clerk_user_id_key";

alter table "public"."Users" add constraint "Users_email_key" UNIQUE using index "Users_email_key";

grant delete on table "public"."Activities" to "anon";

grant insert on table "public"."Activities" to "anon";

grant references on table "public"."Activities" to "anon";

grant select on table "public"."Activities" to "anon";

grant trigger on table "public"."Activities" to "anon";

grant truncate on table "public"."Activities" to "anon";

grant update on table "public"."Activities" to "anon";

grant delete on table "public"."Activities" to "authenticated";

grant insert on table "public"."Activities" to "authenticated";

grant references on table "public"."Activities" to "authenticated";

grant select on table "public"."Activities" to "authenticated";

grant trigger on table "public"."Activities" to "authenticated";

grant truncate on table "public"."Activities" to "authenticated";

grant update on table "public"."Activities" to "authenticated";

grant delete on table "public"."Activities" to "service_role";

grant insert on table "public"."Activities" to "service_role";

grant references on table "public"."Activities" to "service_role";

grant select on table "public"."Activities" to "service_role";

grant trigger on table "public"."Activities" to "service_role";

grant truncate on table "public"."Activities" to "service_role";

grant update on table "public"."Activities" to "service_role";

grant delete on table "public"."ActivityTypes" to "anon";

grant insert on table "public"."ActivityTypes" to "anon";

grant references on table "public"."ActivityTypes" to "anon";

grant select on table "public"."ActivityTypes" to "anon";

grant trigger on table "public"."ActivityTypes" to "anon";

grant truncate on table "public"."ActivityTypes" to "anon";

grant update on table "public"."ActivityTypes" to "anon";

grant delete on table "public"."ActivityTypes" to "authenticated";

grant insert on table "public"."ActivityTypes" to "authenticated";

grant references on table "public"."ActivityTypes" to "authenticated";

grant select on table "public"."ActivityTypes" to "authenticated";

grant trigger on table "public"."ActivityTypes" to "authenticated";

grant truncate on table "public"."ActivityTypes" to "authenticated";

grant update on table "public"."ActivityTypes" to "authenticated";

grant delete on table "public"."ActivityTypes" to "service_role";

grant insert on table "public"."ActivityTypes" to "service_role";

grant references on table "public"."ActivityTypes" to "service_role";

grant select on table "public"."ActivityTypes" to "service_role";

grant trigger on table "public"."ActivityTypes" to "service_role";

grant truncate on table "public"."ActivityTypes" to "service_role";

grant update on table "public"."ActivityTypes" to "service_role";

grant delete on table "public"."EventBleacherRequirements" to "anon";

grant insert on table "public"."EventBleacherRequirements" to "anon";

grant references on table "public"."EventBleacherRequirements" to "anon";

grant select on table "public"."EventBleacherRequirements" to "anon";

grant trigger on table "public"."EventBleacherRequirements" to "anon";

grant truncate on table "public"."EventBleacherRequirements" to "anon";

grant update on table "public"."EventBleacherRequirements" to "anon";

grant delete on table "public"."EventBleacherRequirements" to "authenticated";

grant insert on table "public"."EventBleacherRequirements" to "authenticated";

grant references on table "public"."EventBleacherRequirements" to "authenticated";

grant select on table "public"."EventBleacherRequirements" to "authenticated";

grant trigger on table "public"."EventBleacherRequirements" to "authenticated";

grant truncate on table "public"."EventBleacherRequirements" to "authenticated";

grant update on table "public"."EventBleacherRequirements" to "authenticated";

grant delete on table "public"."EventBleacherRequirements" to "service_role";

grant insert on table "public"."EventBleacherRequirements" to "service_role";

grant references on table "public"."EventBleacherRequirements" to "service_role";

grant select on table "public"."EventBleacherRequirements" to "service_role";

grant trigger on table "public"."EventBleacherRequirements" to "service_role";

grant truncate on table "public"."EventBleacherRequirements" to "service_role";

grant update on table "public"."EventBleacherRequirements" to "service_role";

create policy "Allow All for Auth"
on "public"."Activities"
as permissive
for all
to authenticated
using (true);


create policy "Allow All for Auth"
on "public"."ActivityTypes"
as permissive
for all
to authenticated
using (true);


create policy "allow all for auth"
on "public"."Addresses"
as permissive
for all
to authenticated
using (true);


create policy "allow all for auth"
on "public"."BleacherEvents"
as permissive
for all
to public
using (true);


create policy "allow all for auth"
on "public"."Bleachers"
as permissive
for all
to authenticated
using (true);


create policy "Allow All for Auth"
on "public"."EventBleacherRequirements"
as permissive
for all
to authenticated
using (true);


create policy "allow all for auth"
on "public"."Events"
as permissive
for all
to authenticated
using (true);


create policy "allow all for auth"
on "public"."HomeBases"
as permissive
for all
to authenticated
using (true);


create policy "Allow All for Auth"
on "public"."UserHomeBases"
as permissive
for all
to authenticated
using (true);


create policy "Allow All for Auth"
on "public"."UserRoles"
as permissive
for all
to authenticated
using (true);


create policy "Allow All for Auth"
on "public"."UserStatuses"
as permissive
for all
to authenticated
using (true);


create policy "allow all for auth"
on "public"."Users"
as permissive
for all
to authenticated
using (true);


create policy "select auth"
on "public"."Users"
as permissive
for select
to authenticated
using (true);



